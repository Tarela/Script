#!/bin/bash

if [ $# -lt 2 ];then
    echo "Need 2 parameters!  <name> <species>"
    exit
fi


N=$1
S=$2

#bamToBed -i ${N}.bam > ${N}.bed
#awk '{OFS="\t";if($6 == "+") print $0;}' ${N}.bed > ${N}_plus.bed
#awk '{OFS="\t";if($6 == "-") print $0;}' ${N}.bed > ${N}_minus.bed

#macs2 pileup -i ${N}_plus.bed -o ${N}_plus.bdg -f BED --extsize 1
#macs2 pileup -i ${N}_minus.bed -o ${N}_minus.bdg -f BED --extsize 1

#bdg2bw ${N}_plus.bdg  /nv/vol190/zanglab/sh8tv/Data/Genome/${S}/${S}_clean.len
#bdg2bw ${N}_minus.bdg  /nv/vol190/zanglab/sh8tv/Data/Genome/${S}/${S}_clean.len

if [[ ${S} == 'mm10' ]]
then
SS='mm'
SSS='mouse'
else
SS='hs'
SSS='human'
fi

#if [ ! -f ${R}_2.fastq ]
#then
#macs2 callpeak --SPMR -B -q 0.01 --keep-dup 1 -f BAM --extsize=146 --nomodel -g ${SS} -t /nv/vol190/zanglab/sh8tv/Project/scATAC/Data/ENCODE_ATAC/${SSS}_tissue/align/${N}.bam -n ${N}
#else
macs2 callpeak --SPMR -B -q 0.01 --keep-dup 1 -f BAMPE -g ${SS} -t /nv/vol190/zanglab/sh8tv/Project/scATAC/Data/ENCODE_ATAC/${SSS}_tissue/align/${N}.bam -n ${N}
#fi
mv ${N}_treat_pileup.bdg ${N}.bdg
bdg2bw ${N}.bdg /nv/vol190/zanglab/sh8tv/Data/Genome/${S}/${S}_clean.len

awk '{OFS="\t";if ($2>=200) print $1,$2-200,$2+200,$4,$5;}' ${N}_summits.bed  > ${N}_summit200.bed

#python /nv/vol190/zanglab/sh8tv/Script/ATAC/ATAC_seqbias_offset_bw_unsym.py --genome /nv/vol190/zanglab/sh8tv/Data/Genome/${S}/${S}.2bit --left 4 --right 4 --offset 0 -i ${N}_summit200.bed -o ${N}_8mer_rawbias.txt -p ${N}_plus.bw -n ${N}_minus.bw 
intersectBed -a /nv/vol190/zanglab/sh8tv/Project/scATAC/Data/ENCODE_ATAC/${SSS}_tissue/align/${N}_PEnoMuniq.bed -b ${N}_summit200.bed -u > ${N}_PEnoMuniq_ONownPeak.bed
python /nv/vol190/zanglab/sh8tv/Script/ATAC/ATACseqbias_fromBED.py -p ${N}_summit200.bed -t ${N}_PEnoMuniq_ONownPeak.bed -o ${N}_on_ownPeak_raw8mer.txt -f 4 -s /nv/vol190/zanglab/sh8tv/Data/Genome/${S}/${S}.2bit
python /nv/vol190/zanglab/sh8tv/Script/ATAC/Seqbias_compare_8mer_encoding_pred_obs.py -b ${N}_on_ownPeak_raw8mer.txt -o ${N}_on_ownPeak_Enc8mer.txt




